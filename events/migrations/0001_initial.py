# Generated by Django 4.1.3 on 2022-11-05 20:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CoFoundingRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('low', models.IntegerField()),
                ('high', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CompetitorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('submission_deadline', models.DateTimeField()),
                ('consideration_period', models.DateField()),
                ('realisation_period', models.DateField()),
                ('result', models.TextField()),
                ('site', models.CharField(max_length=512)),
                ('document', models.CharField(max_length=512)),
                ('internal_university_contacts', models.CharField(max_length=512)),
                ('tlr_value', models.IntegerField()),
                ('co_founding_range', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='events.cofoundingrange')),
            ],
        ),
        migrations.CreateModel(
            name='FoundingRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('low', models.IntegerField()),
                ('high', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='FoundingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizerLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('code', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('logo', models.CharField(max_length=512)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.organizerlevel')),
            ],
        ),
        migrations.CreateModel(
            name='EventSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('event', models.ManyToManyField(to='events.event')),
            ],
        ),
        migrations.CreateModel(
            name='EventRequirementMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competitor', models.ManyToManyField(to='events.competitortype')),
                ('event', models.ManyToManyField(to='events.event')),
            ],
        ),
        migrations.CreateModel(
            name='EventPrecursor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_precursor', models.ManyToManyField(related_name='event_precursor', to='events.event')),
                ('successor', models.ManyToManyField(related_name='current_event', to='events.event')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='founding_range',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='events.foundingrange'),
        ),
        migrations.AddField(
            model_name='event',
            name='founding_type',
            field=models.ManyToManyField(to='events.foundingtype'),
        ),
        migrations.AddField(
            model_name='event',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.organizer'),
        ),
    ]
